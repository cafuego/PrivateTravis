<?php

require_once('vendor/autoload.php');

use Symfony\Component\Console\Application;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Yaml\Yaml;

$console = new Application();

$console
  ->register('build')
  ->setDescription('Build the Docker command to run the .travis.yml file.')
  ->setCode(function (InputInterface $input, OutputInterface $output) {
    // Get the travis configuration.
    $namespace = 'drupal';
    $travis = Yaml::parse('.travis.yaml');
    $language = !empty($travis['language']) ? $travis['language'] : '';
    $language_versions = !empty($travis[$language]) ? $travis[$language] : '';
    $services = !empty($travis['services']) ? $travis['services'] : array();

    $output->writeln('#!/bin/bash');
    $output->writeln("\n");
    $output->writeln('# The following is generated by the compiler comsole.');
    $output->writeln('# Only make manual edits if you are debugging.');
    $output->writeln("\n");

    // Get the permutations.
    foreach ($language_versions as $language_version) {

      $output->writeln('##');
      $output->writeln('# Performing tests for: ' . $language . $language_version);
      $output->writeln('##');

      $links = '';
      foreach ($services as $service) {
        $link = $namespace . '/' . $service;
        $upper_service = strtoupper($service);

        $output->writeln($upper_service . '_ID=$(docker run --rm -v $(pwd):/data ' . $link . ' before_script script)');
        $output->writeln($upper_service. '=$(docker inspect --format "{{ .Name }}" $' . strtoupper($service) . '_ID | cut -d "/" -f 2)');

        $links .= '--link $' . $upper_service . ':' . $service . ' ';
      }

      // End with the main container.
      $main = $namespace . '/' . $language;
      $output->writeln('docker run --rm -v $(pwd):/data ' . $links . ' ' . $main . ' before_script script');
      $output->writeln("\n");
    }
  });

$console->run();
