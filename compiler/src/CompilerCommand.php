<?php

namespace Compiler;

use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Yaml\Yaml;
use Compiler\Permutation;

class CompilerCommand extends Command {

  protected function configure() {
    $this->setName('build')->setDescription('Build the Docker command to run the .travis.yml file.');
  }

  protected function execute(InputInterface $input, OutputInterface $output) {
    // @todo Make this a parameter. That way 3rd parties can provide their own
    // containers for testing.
    $namespace = 'drupal';

    // @todo, Make this a parameter. That we we can experiment with changes in
    // travis build order.
    $command = 'env before_script script';

    // Get the travis configuration.
    $travis = Yaml::parse('.travis.yml');
    $language = !empty($travis['language']) ? $travis['language'] : '';
    $language_versions = !empty($travis[$language]) ? $travis[$language] : array();
    $services = !empty($travis['services']) ? $travis['services'] : array();

    // Provide a basic header.
    $output->writeln('#!/bin/bash');
    $output->writeln("\n");
    $output->writeln('# The following is generated by the compiler console.');
    $output->writeln('# Only make manual edits if you are debugging.');
    $output->writeln("\n");


    // Get the permutations.
    foreach ($language_versions as $language_version) {
      $output->writeln('echo "Performing tests for: ' . $language . $language_version . '"');

      $permutation = new Permutation();
      $permutation->setNamespace($namespace);
      $permutation->setLanguage($language . $language_version);
      $permutation->setCommand($command);
      $permutation->addServices($services);

      // Print.
      $lines = $permutation->build();
      foreach ($lines as $line) {
        $output->writeln($line);
      }
      $output->writeln("\n");
    }
  }

}
